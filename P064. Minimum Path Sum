Problem:
Given a m x n grid filled with non-negative numbers, find a path from top left to bottom right which minimizes the sum of all numbers along its path.

Note: You can only move either down or right at any point in time.

Tags: [Dynamic Programming]

Solution: [c#]
public int MinPathSum(int[,] grid) {
        int row = grid.GetLength(0);
			int col = grid.GetLength(1);
			int[,] sum = new int[row, col];
			sum[0, 0] = grid[0, 0];
			for (int i = 1; i < row; i++)
			{
				sum[i, 0] = sum[i - 1, 0] + grid[i, 0];
			}
			for (int i = 1; i < col; i++)
			{
				sum[0, i] = sum[0, i - 1] + grid[0, i];
			}
			for (int i = 1; i < row; i++)
			{
				for (int j = 1; j < col; j++)
				{
					sum[i, j] = Math.Min(sum[i, j - 1], sum[i - 1, j]) + grid[i, j];
				}
			}
			return sum[row - 1, col - 1];
    }
