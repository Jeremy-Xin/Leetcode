Problem:
Given a binary tree, flatten it to a linked list in-place.

For example,
Given

         1
        / \
       2   5
      / \   \
     3   4   6
The flattened tree should look like:
   1
    \
     2
      \
       3
        \
         4
          \
           5
            \
             6


Tags: [Depth-first search]

Solution:
public void flatten(TreeNode root) {
        helper(root);
    }
    
    private TreeNode helper(TreeNode root)
    {
        if (root == null) return null;
        TreeNode t = root.right;
        root.right = helper(root.left);
        root.left = null;
        TreeNode node = root;
        while (node.right != null)
        {
            node = node.right;
        }
        node.right = helper(t);
        return root;
    }